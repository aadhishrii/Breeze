/** @jsxRuntime classic */
/** @jsx jsx */
import { css, jsx } from '@emotion/react';
import React, { Fragment } from 'react';
import Head from 'next/head';
import Link from 'next/link'

import Button from '@atlaskit/button';
import Form, { Field, FormFooter, HelperMessage } from '@atlaskit/form';
import Textfield from '@atlaskit/textfield';
import TextArea from '@atlaskit/textarea';

import LoadingPage from '../../components/loadingPage';

import Layout from '../../components/layout';
import { useSession, getProviders, signIn } from "next-auth/react";
import Router from 'next/router'
import GoogleButton from 'react-google-button'

const buttonStyles = css({
  margin: '18px',
})

const cancelButtonStyle = css({
  marginLeft: '10px',
})

const formTitleStyles = css({
    font: 'SF Pro',
    fontSize: 24,
    fontWeight: 'medium',
    paddingBottom: '20px',
    paddingTop: '50px',
})

const itineraryFormStyle = css({
  display: 'flex',
  flexDirection: 'row',
  alignItems: 'center',
  justifyContent: 'center'
});

const titleStyle = {
  display: 'flex',
  maxWidth: '100%',
  margin: '0 auto',
  flexDirection: 'column'
}

const formStyle = {
  display: 'flex',
  width: '400px',
  maxWidth: '100%',
  margin: '0 auto',
  flexDirection: 'column'
}

export default function SignIn({ providers }) {
  const googleProvider = providers['google']

  const { status } = useSession()
  if (status === "authenticated") {
    Router.push("/home");
    return (
      <Layout pageTitle="Home">
        <LoadingPage/>
      </Layout>
    )
  }

  return (
    <Layout pageTitle="Sign in">
      <Head>
          <title>Create Itinerary</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
      </Head>
        
    <div
      style={formStyle}
    >
      
      <div css={ formTitleStyles }>Sign in</div>
      {/* <Form
        onSubmit={() =>{
        console.log('form submitted');
        Router.push('/home');
      }
      }
      >
        {({ formProps }) => (
            <form {...formProps}>
                <Field label="Email" name="example-text">
                    {({ fieldProps }) => (
                    <Fragment>
                        <Textfield
                        placeholder="Enter your email"
                        {...fieldProps}
                        />
                    </Fragment>
                    )}
                </Field>
                
                <Field label="Password" name="enterPassword">
                    {({ fieldProps }) => (
                    <Fragment>
                        <Textfield
                        placeholder="Enter password"
                        {...fieldProps}
                        />
                    </Fragment>
                    )}
                </Field>

                <FormFooter>
                  <Button shouldFitContainer appearance="primary">
                    Sign in
                  </Button>
                </FormFooter>
            </form>  
        )}
        </Form> */}
        
        <div style={{paddingTop: '20px'}}>
          <GoogleButton 
          style={{width: '100%'}}
            onClick={() => {
              signIn(googleProvider.id, {
                callbackUrl: '/home'
              });
            }}
          >
            Sign in with {googleProvider.name}
          </GoogleButton>
        </div>
      </div>
    </Layout>
  )
}

export async function getServerSideProps(context) {
  const providers = await getProviders()
  return {
    props: { providers },
  }
}