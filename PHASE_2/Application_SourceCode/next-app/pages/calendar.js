/** @jsxRuntime classic */
/** @jsx jsx */
import { css, jsx } from '@emotion/react';
import React, { useEffect, useState } from 'react';

import Head from 'next/head';

import Layout from '../components/layout';

import { Calendar, momentLocalizer } from "react-big-calendar";
import moment from "moment";
import "react-big-calendar/lib/css/react-big-calendar.css";

import { useSession } from 'next-auth/react';

import { getUserItineraries, getUserEvents, getProfileData } from '../lib/util';

const backgroundStyles = css({
  backgroundColor: '#e8e8e8',
  height: '92vh',
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center'
})

const calendarContainerStyles = css({
  width: '60vw',
  backgroundColor: 'white',
})

const localizer = momentLocalizer(moment);
const myEventsList = [
  { start: new Date(), end: new Date(), title: "special event" }
];

export default function CalendarPage() {
  const { data: session } = useSession({ required: true })
    
  const [eventData, setEventData] = useState([]);
  const [itineraryData, setItineraryData] = useState([]);

  useEffect(async () => {
    if (session) {
        const user = await getProfileData(session.user.email);
        setEventData(await getUserEvents(user.id));
        setItineraryData(await getUserItineraries(user.id));
    }
  },[session]);

  const eventsList = eventData.map((event) => {
    const dateArray = event.date.split("/")
    console.log(dateArray)
    const date = new Date(dateArray[2], dateArray[1], dateArray[0]);

    return {
      start: date,
      end: date,
      title: event.title
    }
  })

  const itinerariesList = itineraryData.map((itinerary) => {
    const startDateArray = itinerary.startDate.split("/")
    const endDateArray = itinerary.endDate.split("/")
    const startDate = new Date(startDateArray[2], startDateArray[1], startDateArray[0]);
    const endDate = new Date(endDateArray[2], endDateArray[1], endDateArray[0]);

    return {
      start: startDate,
      end: endDate,
      title: itinerary.title
    }
  })

  const displayedEvents = eventsList.concat(itinerariesList)

  return (
    <Layout pageTitle="Calendar" signInRequired>
      <Head>
        <title>Calendar</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div css={backgroundStyles}>
        <div css={calendarContainerStyles}>
          <Calendar
            localizer={localizer}
            events={displayedEvents}
            startAccessor="start"
            endAccessor="end"
            style={{ height: 500 }}
          />
        </div>
      </div>
    </Layout>
  )
}