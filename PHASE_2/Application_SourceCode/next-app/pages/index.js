/** @jsxRuntime classic */
/** @jsx jsx */
import { css,jsx } from '@emotion/react';

import Head from 'next/head';
import Image from 'next/image';

import Button from '@atlaskit/button';
import { token } from "@atlaskit/tokens";
import { N50A, N40A, N0 } from "@atlaskit/theme/colors";

import BreezeLogo from '../public/images/BreezeLogo.png';
import eventFeatureIcon from '../public/images/EventFeatureIcon.png';
import itineraryFeatureIcon from '../public/images/ItineraryFeatureIcon.png';
import locationFinderIcon from '../public/images/LocationFinderIcon.png';
import ChevronDownIcon from '@atlaskit/icon/glyph/chevron-down'

import { Feature } from '../components/feature';
import { signIn, signOut, useSession } from 'next-auth/react';

const coverStyles = css({
  backgroundImage: `url('/images/trees.avif')`,
  backgroundRepeat: 'no-repeat',
  backgroundSize: 'cover',
  height: '80vh',
  display: 'flex',
  flexDirection: 'column',
  justifyContent: 'flex-end',
  gap: '40%',
  alignItems: 'center',
  borderRadius: '0 0 100vw 100vw / 25%',
})

const logoStyles = css({
  padding: '12px',
  borderRadius: '70px',
})

const ButtonGroupStyles = css({
  padding: '30px',
  position: 'absolute',
  top: '0px',
  display: 'flex',
  right: '0px',
  gap: '10px',
})

const infoContainerStyles = css({
  justifyContent: 'center',
  padding: '60px 0px 24px 0px',
  display: 'flex',
  width: '100%',
  fontSize: 24,
  fontStyle: 'italic',
})

const footerStyles = css({
  justifyContent: 'center',
  padding: '30px',
  display: 'flex',
  width: '100%',
  fontSize: 24,
  fontWeight: 'lighter',
})

const featureContainerStyles = css({
  display: 'flex',
  flexDirection: 'row',
  justifyContent: 'center',
  gap: '60px',
  alignItems: 'center',
  padding: '60px'
})

const featureCardStyles = css ({
  display: 'flex',
  gap: '18px',
  fontFamily: "'SF Pro Text', sans-serif",
  flexDirection: 'column',
  alignItems: 'center',
  padding: `30px`,
  width: '230px',
  boxShadow: token(
    "elevation.shadow.raised",
    `0 1px 1px ${N50A}, 0 0 1px 1px ${N40A}`
  ),
  backgroundColor: token(
    'elevation.surface.raised',
    N0
  ),
})

const featureDescriptionStyles = css({
  borderTop: '1px solid #CCC',
  paddingTop: '30px',
  textAlign: 'center',
  fontSize: 16,
  fontWeight: 100
})

export const FeatureCard = (props) => {
  return (
  <div css={ featureCardStyles }>
      {props.feature}
      <div css={featureDescriptionStyles}>
        {props.children}
      </div>
  </div>
)}

export default function LandingPage() {
  const { data: session, status } = useSession()
  const loading = status === "loading"
  
  return (
    <div>
      <Head>
        <title>Event Creator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div css={ButtonGroupStyles}>
        <Button href='/account/creator' appearance='default'>Create account</Button>
        <Button 
          appearance='primary' 
          onClick={(e) => {
            e.preventDefault()
            signIn()
          }}>
            Sign in
          </Button>
      </div>
      <div css={coverStyles}>
        <Image css={logoStyles} src={BreezeLogo}/>
        <Button 
        appearance="" 
        iconBefore={<ChevronDownIcon/>} 
        style={{ marginBottom: '-40px', borderRadius: '40px'}} 
        onClick={() => {if (typeof window !== "undefined") {window.scroll({
          top: document.body.scrollHeight,
          behavior: 'smooth'
        })}}}
        />
      </div>
      <div css={infoContainerStyles}>
        'An event planner with your safety in mind'
      </div>
      <div css={featureContainerStyles}>
        <FeatureCard feature={<Feature href="/account/creator" src={eventFeatureIcon} label="Create event"/>}>
          Plan a event, see disease risk and relevant restriction information
        </FeatureCard>
        <FeatureCard feature={<Feature href="/account/creator" src={itineraryFeatureIcon} label="Create itinerary"/>}>
          Plan your trip, add events and view health requirements for your destination
        </FeatureCard>
        <FeatureCard feature={<Feature href="/locationFinder" src={locationFinderIcon} label="Location Finder" isDisabled/>}>
          See available travel locations based on your desired activities and climate.
        </FeatureCard>
      </div>
      <div css={footerStyles}>
        Made by Galaxy Team ðŸš€
      </div>
    </div>
  )
}