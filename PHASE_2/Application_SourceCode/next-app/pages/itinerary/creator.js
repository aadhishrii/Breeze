/** @jsxRuntime classic */
/** @jsx jsx */
import { css, jsx } from '@emotion/react';
import React, { Fragment } from 'react';
import Head from 'next/head';
import Link from 'next/link'

import Button from '@atlaskit/button';
import Form, { Field, FormFooter, HelperMessage } from '@atlaskit/form';
import Textfield from '@atlaskit/textfield';
import TextArea from '@atlaskit/textarea';
import { DatePicker, TimePicker } from '@atlaskit/datetime-picker';
import { useState, useEffect } from 'react';

import Layout from '../../components/layout';

const buttonStyles = css({
  margin: '18px',
})

const formfooterStyles = css({
  display: 'flex', 
  gap: '18px',
  justifyContent: 'center'
})

const formTitleStyles = css({
    font: 'SF Pro',
    fontSize: 24,
    fontWeight: 'medium',
    paddingBottom: '20px',
    paddingTop: '50px',
})

const itineraryFormStyle = css({
  display: 'flex',
  flexDirection: 'row',
  alignItems: 'center',
  justifyContent: 'center'
});

const titleStyle = {
  display: 'flex',
  maxWidth: '100%',
  margin: '0 auto',
  flexDirection: 'column'
}

const formStyle = {
  display: 'flex',
  width: '400px',
  maxWidth: '100%',
  margin: '0 auto',
  flexDirection: 'column'
}

const fieldStyle = {
  paddingBottom: '100px'
}

const handleItinerarySubmission = (data) => { 
  fetch("http://127.0.0.1:8000/createItinerary", {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data),
  })
  .then(response => response.json())
  .then(responseData => {
    console.log('Success:', responseData);
  })
  .catch((error) => {
    console.error('Error:', error);
  });
};

export default function ItineraryCreation() {

  return (
    <Layout pageTitle="Itinerary Creator" signInRequired>
        <Head>
            <title>Create Itinerary</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
          
          <div
            style={formStyle}
          >
            
          <div css={ formTitleStyles }>Itinerary Details</div>
            <Form
              onSubmit={(data) => {
              console.log('form submitted');
              console.log(data);
              handleItinerarySubmission(data);
            }}
            >
            {({ formProps }) => (
                <form {...formProps}>
                    <Field label="Title" name="title" style={fieldStyle} isRequired>
                        {({ fieldProps }) => (
                        <Fragment>
                            <Textfield
                            placeholder="Enter your itinerary title here"
                            {...fieldProps}
                            />
                        </Fragment>
                        )}
                    </Field>
                    <div style={{paddingBottom: '10px'}}></div>
                    <Field label="Description" name="description" >
                        {({ fieldProps }) => (
                        <Fragment>
                            <TextArea
                            placeholder="Enter your itinerary description here"
                            {...fieldProps}
                            />
                        </Fragment>
                        )}
                    </Field>
                    <div style={{paddingBottom: '10px'}}></div>
                    <Field label="Departing from" name="departureLocation" >
                        {({ fieldProps }) => (
                        <Fragment>
                          <Textfield
                            placeholder="e.g Sydney, Australia"
                            {...fieldProps}
                            />
                        </Fragment>
                        )}
                    </Field>
                    <div style={{paddingBottom: '10px'}}></div>
                    <Field label="Destination" name="destinationLocation" >
                        {({ fieldProps }) => (
                        <Fragment>
                          <Textfield
                            placeholder="e.g Melbourne, Australia"
                            {...fieldProps}
                            />
                        </Fragment>
                        )}
                    </Field>
                    <div style={{paddingBottom: '10px'}}></div>
                    <Field label="Start date" name="startDate">
                        {({ fieldProps }) => (
                        <Fragment>
                          <DatePicker placeholder='e.g 18/04/2022' {...fieldProps}/>
                        </Fragment>
                        )}
                    </Field>
                    <div style={{paddingBottom: '10px'}}></div>
                    <Field label="End date" name="endDate">
                        {({ fieldProps }) => (
                        <Fragment>
                          <DatePicker placeholder='e.g 18/04/2022' {...fieldProps}/>
                        </Fragment>
                        )}
                    </Field>
                    <FormFooter align='start'>
                      <div css={formfooterStyles}>
                        <Link href="/home">
                          <Button type="submit" appearance="subtle">
                            Cancel
                          </Button>
                        </Link>
                        <Button type="submit" appearance="primary">
                          Submit
                        </Button>
                      </div>
                    </FormFooter>
                </form>  
            )}
            </Form>
          </div>
          <div style={{paddingBottom: '70px'}}></div>
    </Layout>
  )
}